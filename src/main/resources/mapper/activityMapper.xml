<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mutedcritics.activity.dao.ActivityDAO">

    <!-- 일일 접속자 수 조회 -->
    <select id="DAU" resultType="int">
        SELECT COUNT(DISTINCT user_id) AS user_count
        FROM access_stats
        WHERE access_time &gt;= #{today}
        AND  access_time &lt; DATE_ADD(#{today}, INTERVAL 1 DAY)
    </select>
    <!-- 일일 신규 유저 수 조회 -->
    <select id="getNewUserCount" resultType="int">
        SELECT COUNT(user_id) AS new_user_count
        FROM user
        WHERE join_date = #{today}
    </select>
    <!-- 일일 휴면 전환 유저 수 조회 -->
    <select id="getDormantUserCount" resultType="int">
        SELECT COUNT(user_id) AS dormant_user_count
        FROM user
        WHERE dormant_date = #{today}
    </select>
    <!-- 일일 복귀 유저 수 조회 -->
    <select id="getReturningUserCount" resultType="int">
        SELECT COUNT(user_id) AS returning_user_count
        FROM user
        WHERE returning_date = #{today}
    </select>
    <!-- 일일 탈퇴 유저 수 조회 -->
    <select id="getWithdrawnUserCount" resultType="int">
        SELECT COUNT(user_id) AS withdrawn_user_count
        FROM user
        WHERE withdraw_date = #{today}
    </select>

    <!-- 일일 통계 저장 -->
    <insert id="insertDailyActivity" parameterType="map">
        INSERT INTO stats_activity_daily (stats_date, dau, new_user_count, dormant_user_count, returning_user_count, withdrawn_user_count)
        VALUES (#{today}, #{DAU}, #{newUserCount}, #{dormantUserCount}, #{returningUserCount}, #{withdrawnUserCount})
        ON DUPLICATE KEY UPDATE
        dau = #{DAU},
        new_user_count = #{newUserCount},
        dormant_user_count = #{dormantUserCount},
        returning_user_count = #{returningUserCount},
        withdrawn_user_count = #{withdrawnUserCount}
    </insert>

    <!-- 기간별 일일 활성 이용자 수 -->
    <select id="periodDailyUser" resultType="map">
        SELECT stats_date, DAU
        FROM stats_activity_daily
        WHERE stats_date BETWEEN #{startDate} AND #{endDate}
    </select>

    <!-- 기간별 주간 활성 이용자 수 -->
    <select id="periodWeeklyUser" resultType="map" parameterType="map">
        <foreach collection="weeklyDates" item="dates" index="week" separator="UNION ALL">
            SELECT 
                #{week} AS week,
                COALESCE(SUM(dau), 0) AS WAU
            FROM stats_activity_daily
            WHERE
            <foreach collection="dates" item="d" open="(" separator=" OR " close=")">
                stats_date = #{d}
            </foreach>
        </foreach>
    </select>

    <!-- 기간별 월간 활성 이용자 수 -->
    <select id="periodMonthlyUser" resultType="map" parameterType="map">
        <foreach collection="monthlyDates" item="dates" index="month" separator="UNION ALL">
            SELECT 
                #{month} AS month,
                COALESCE(SUM(dau), 0) AS MAU
            FROM stats_activity_daily
            WHERE
            <foreach collection="dates" item="d" open="(" separator=" OR " close=")">
                stats_date = #{d}
            </foreach>
        </foreach>
    </select>

</mapper>